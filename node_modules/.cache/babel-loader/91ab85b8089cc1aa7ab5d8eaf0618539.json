{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\acomgit\\\\ecomgit\\\\ecommerce\\\\src\\\\contexts\\\\cart-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { cartreducer } from \"../reducers/cart-reducers\";\nimport { useAuth } from \"./auth-context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Cartcontext = /*#__PURE__*/createContext();\nexport function Cartprovider({\n  children\n}) {\n  _s();\n\n  const [cartstate, cartdispatch] = useReducer(cartreducer, {\n    dataincart: []\n  });\n  console.log({\n    cartstatecartdata: cartstate.dataincart\n  });\n  const {\n    token\n  } = useAuth();\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://ecom-server--bleedblue.repl.co/cart/getcartdata\", {\n          headers: {\n            authorization: token\n          },\n          cancelToken: source.token\n        });\n        cartdispatch({\n          type: \"SET_DATA_TO_ARRAY\",\n          payload: response.data.data.productsincart\n        }); // ...\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          //cancelled\n          console.log(\"axios cancel : \", JSON.stringify(axios.isCancel(error)));\n        } else {\n          // throw error;\n          console.log({\n            success: false,\n            errormessage: error.message\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      source.cancel();\n    };\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Cartcontext.Provider, {\n      value: {\n        cartstate,\n        cartdispatch\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Cartprovider, \"aSSq3iw0IBAFBiXX4u1cYGrVuIw=\", false, function () {\n  return [useAuth];\n});\n\n_c = Cartprovider;\nexport const useCartcontext = () => {\n  _s2();\n\n  return useContext(Cartcontext);\n};\n\n_s2(useCartcontext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Cartprovider\");","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/acomgit/ecomgit/ecommerce/src/contexts/cart-context.js"],"names":["createContext","useContext","useReducer","useEffect","cartreducer","useAuth","axios","Cartcontext","Cartprovider","children","cartstate","cartdispatch","dataincart","console","log","cartstatecartdata","token","source","CancelToken","fetchData","response","get","headers","authorization","cancelToken","type","payload","data","productsincart","error","isCancel","JSON","stringify","success","errormessage","message","cancel","useCartcontext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AACP,OAAO,SAASQ,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,UAAU,CAACE,WAAD,EAAc;AAAEQ,IAAAA,UAAU,EAAE;AAAd,GAAd,CAA5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,IAAAA,iBAAiB,EAAEL,SAAS,CAACE;AAA/B,GAAZ;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYX,OAAO,EAAzB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGX,KAAK,CAACY,WAAN,CAAkBD,MAAlB,EAAf;;AAEA,UAAME,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CACrB,yDADqB,EAErB;AACEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEP;AAAjB,WADX;AAEEQ,UAAAA,WAAW,EAAEP,MAAM,CAACD;AAFtB,SAFqB,CAAvB;AAOAL,QAAAA,YAAY,CAAC;AACXc,UAAAA,IAAI,EAAE,mBADK;AAEXC,UAAAA,OAAO,EAAEN,QAAQ,CAACO,IAAT,CAAcA,IAAd,CAAmBC;AAFjB,SAAD,CAAZ,CARE,CAYF;AACD,OAbD,CAaE,OAAOC,KAAP,EAAc;AACd,YAAIvB,KAAK,CAACwB,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACzB;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiB,IAAI,CAACC,SAAL,CAAe1B,KAAK,CAACwB,QAAN,CAAeD,KAAf,CAAf,CAA/B;AACD,SAHD,MAGO;AACL;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAEmB,YAAAA,OAAO,EAAE,KAAX;AAAkBC,YAAAA,YAAY,EAAEL,KAAK,CAACM;AAAtC,WAAZ;AACD;AACF;AACF,KAvBD;;AAyBAhB,IAAAA,SAAS;AAET,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACmB,MAAP;AACD,KAFD;AAGD,GAjCQ,EAiCN,CAACpB,KAAD,CAjCM,CAAT;AAkCA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAF;AAAaC,QAAAA;AAAb,OAA7B;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GA7CeD,Y;UAGIH,O;;;KAHJG,Y;AA+ChB,OAAO,MAAM6B,cAAc,GAAG;AAAA;;AAAA,SAAMpC,UAAU,CAACM,WAAD,CAAhB;AAAA,CAAvB;;IAAM8B,c","sourcesContent":["import { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport { cartreducer } from \"../reducers/cart-reducers\";\r\nimport { useAuth } from \"./auth-context\";\r\nimport axios from \"axios\";\r\nexport const Cartcontext = createContext();\r\nexport function Cartprovider({ children }) {\r\n  const [cartstate, cartdispatch] = useReducer(cartreducer, { dataincart: [] });\r\n  console.log({ cartstatecartdata: cartstate.dataincart });\r\n  const { token } = useAuth();\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://ecom-server--bleedblue.repl.co/cart/getcartdata\",\r\n          {\r\n            headers: { authorization: token },\r\n            cancelToken: source.token,\r\n          }\r\n        );\r\n        cartdispatch({\r\n          type: \"SET_DATA_TO_ARRAY\",\r\n          payload: response.data.data.productsincart,\r\n        });\r\n        // ...\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          //cancelled\r\n          console.log(\"axios cancel : \", JSON.stringify(axios.isCancel(error)));\r\n        } else {\r\n          // throw error;\r\n          console.log({ success: false, errormessage: error.message });\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [token]);\r\n  return (\r\n    <>\r\n      <Cartcontext.Provider value={{ cartstate, cartdispatch }}>\r\n        {children}\r\n      </Cartcontext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const useCartcontext = () => useContext(Cartcontext);\r\n"]},"metadata":{},"sourceType":"module"}