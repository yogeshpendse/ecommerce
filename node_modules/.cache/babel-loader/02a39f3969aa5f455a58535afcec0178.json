{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yogesh\\\\Desktop\\\\acomgit\\\\ecomgit\\\\ecommerce\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useAuth } from \"../contexts/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const [usernameval, setUsernameval] = useState(\"\");\n  const [passwordval, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    setIsuserloggedin,\n    setToken,\n    isuserloggedin\n  } = useAuth();\n\n  function handleusername(e) {\n    if (e.length === 0) {\n      setUsernameval(e);\n    } else {\n      setUsernameval(e);\n    }\n  }\n\n  function handlepassword(e) {\n    if (e.length === 0) {\n      setPassword(e);\n    } else {\n      setPassword(e);\n    }\n  }\n\n  async function checklogin() {\n    try {\n      const url = \"https://ecom-server.bleedblue.repl.co/user/login\";\n      const response = await axios.post(url, {\n        username: usernameval,\n        password: passwordval\n      });\n      console.log(response);\n\n      if (response.status === 200) {\n        const stringifieddata = JSON.stringify({\n          loginstatus: response.data.success,\n          clienttoken: response.data.token\n        });\n        localStorage.setItem(\"login\", stringifieddata);\n        setIsuserloggedin(response.data.success);\n        setToken(response.data.token);\n        console.log({\n          statevalue: state.from\n        });\n        (state === null || state === void 0 ? void 0 : state.from) && navigate(state.from || \"/\");\n      }\n    } catch (error) {\n      console.log({\n        errormessage: error.message\n      });\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"login\");\n    setIsuserloggedin(false);\n    setToken(null);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isuserloggedin === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username\",\n        onChange: e => handleusername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"password\",\n        onChange: e => handlepassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checklogin,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/signup\"),\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"2jH4CVP66hObYK6Ylwqaa4Tt8t4=\", false, function () {\n  return [useLocation, useNavigate, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/acomgit/ecomgit/ecommerce/src/components/login.js"],"names":["useLocation","axios","useNavigate","useState","useAuth","Login","state","usernameval","setUsernameval","passwordval","setPassword","navigate","setIsuserloggedin","setToken","isuserloggedin","handleusername","e","length","handlepassword","checklogin","url","response","post","username","password","console","log","status","stringifieddata","JSON","stringify","loginstatus","data","success","clienttoken","token","localStorage","setItem","statevalue","from","error","errormessage","message","logout","removeItem","window","location","reload","target","value"],"mappings":"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","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../contexts/auth-context\";\r\nexport function Login() {\r\n  const { state } = useLocation();\r\n  const [usernameval, setUsernameval] = useState(\"\");\r\n  const [passwordval, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { setIsuserloggedin, setToken, isuserloggedin } = useAuth();\r\n\r\n  function handleusername(e) {\r\n    if (e.length === 0) {\r\n      setUsernameval(e);\r\n    } else {\r\n      setUsernameval(e);\r\n    }\r\n  }\r\n  function handlepassword(e) {\r\n    if (e.length === 0) {\r\n      setPassword(e);\r\n    } else {\r\n      setPassword(e);\r\n    }\r\n  }\r\n  async function checklogin() {\r\n    try {\r\n      const url = \"https://ecom-server.bleedblue.repl.co/user/login\";\r\n      const response = await axios.post(url, {\r\n        username: usernameval,\r\n        password: passwordval,\r\n      });\r\n      console.log(response);\r\n      if (response.status === 200) {\r\n        const stringifieddata = JSON.stringify({\r\n          loginstatus: response.data.success,\r\n          clienttoken: response.data.token,\r\n        });\r\n        localStorage.setItem(\"login\", stringifieddata);\r\n        setIsuserloggedin(response.data.success);\r\n        setToken(response.data.token);\r\n        console.log({ statevalue: state.from });\r\n        state?.from && navigate(state.from || \"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log({ errormessage: error.message });\r\n    }\r\n  }\r\n  const logout = () => {\r\n    localStorage.removeItem(\"login\");\r\n    setIsuserloggedin(false);\r\n    setToken(null);\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <>\r\n      {isuserloggedin === false ? (\r\n        <div>\r\n          <input\r\n            placeholder=\"username\"\r\n            onChange={(e) => handleusername(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"password\"\r\n            onChange={(e) => handlepassword(e.target.value)}\r\n          />\r\n          <button onClick={checklogin}>login</button>\r\n          <button onClick={() => navigate(\"/signup\")}>register</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={logout}>logout</button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}