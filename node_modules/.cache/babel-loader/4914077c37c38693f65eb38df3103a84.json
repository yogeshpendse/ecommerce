{"ast":null,"code":"import { checkifelementexist } from \"../functions/checkifelementexist\";\nimport { addtoarray } from \"../functions/addtoarray\";\nimport { extend } from \"lodash\";\nexport function cartreducer(prevstate, action) {\n  switch (action.type) {\n    case \"RETURN_SAME_ARRAY\":\n      console.log({\n        payload: action.payload,\n        type: action.type,\n        array: prevstate.dataincart\n      });\n      return { ...prevstate\n      };\n\n    case \"ADD_TO_CART\":\n      const op = checkifelementexist(prevstate.dataincart, action.payload);\n\n      if (!op) {\n        const updatedaddingtocart = addtoarray(prevstate.dataincart, action.payload);\n        const newobj = extend(prevstate, {\n          dataincart: updatedaddingtocart\n        });\n        console.log(newobj);\n        return newobj;\n      }\n\n      return prevstate;\n\n    case \"REMOVE_FROM_CART\":\n      console.log({\n        payload: action.payload\n      }); // const removefromcartobj = extend(prevstate, {\n      //   dataincart: action.payload,\n      // });\n      // console.log({ removefromcartobj });\n\n      return { ...prevstate\n      };\n\n    case \"SET_DATA_TO_ARRAY\":\n      // const newobj = extend(prevstate, { dataincart: [...action.payload] });\n      return {\n        dataincart: [...action.payload]\n      };\n\n    default:\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/Yogesh/Desktop/acomgit/ecomgit/ecommerce/src/reducers/cart-reducers.js"],"names":["checkifelementexist","addtoarray","extend","cartreducer","prevstate","action","type","console","log","payload","array","dataincart","op","updatedaddingtocart","newobj"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,kCAApC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY;AACVC,QAAAA,OAAO,EAAEJ,MAAM,CAACI,OADN;AAEVH,QAAAA,IAAI,EAAED,MAAM,CAACC,IAFH;AAGVI,QAAAA,KAAK,EAAEN,SAAS,CAACO;AAHP,OAAZ;AAKA,aAAO,EAAE,GAAGP;AAAL,OAAP;;AAEF,SAAK,aAAL;AACE,YAAMQ,EAAE,GAAGZ,mBAAmB,CAACI,SAAS,CAACO,UAAX,EAAuBN,MAAM,CAACI,OAA9B,CAA9B;;AACA,UAAI,CAACG,EAAL,EAAS;AACP,cAAMC,mBAAmB,GAAGZ,UAAU,CACpCG,SAAS,CAACO,UAD0B,EAEpCN,MAAM,CAACI,OAF6B,CAAtC;AAKA,cAAMK,MAAM,GAAGZ,MAAM,CAACE,SAAD,EAAY;AAC/BO,UAAAA,UAAU,EAAEE;AADmB,SAAZ,CAArB;AAGAN,QAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,eAAOA,MAAP;AACD;;AACD,aAAOV,SAAP;;AAEF,SAAK,kBAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,OAAO,EAAEJ,MAAM,CAACI;AAAlB,OAAZ,EADF,CAEE;AACA;AACA;AACA;;AACA,aAAO,EAAE,GAAGL;AAAL,OAAP;;AACF,SAAK,mBAAL;AACE;AACA,aAAO;AAAEO,QAAAA,UAAU,EAAE,CAAC,GAAGN,MAAM,CAACI,OAAX;AAAd,OAAP;;AACF;AACE;AApCJ;AAsCD","sourcesContent":["import { checkifelementexist } from \"../functions/checkifelementexist\";\r\nimport { addtoarray } from \"../functions/addtoarray\";\r\nimport { extend } from \"lodash\";\r\nexport function cartreducer(prevstate, action) {\r\n  switch (action.type) {\r\n    case \"RETURN_SAME_ARRAY\":\r\n      console.log({\r\n        payload: action.payload,\r\n        type: action.type,\r\n        array: prevstate.dataincart,\r\n      });\r\n      return { ...prevstate };\r\n\r\n    case \"ADD_TO_CART\":\r\n      const op = checkifelementexist(prevstate.dataincart, action.payload);\r\n      if (!op) {\r\n        const updatedaddingtocart = addtoarray(\r\n          prevstate.dataincart,\r\n          action.payload\r\n        );\r\n\r\n        const newobj = extend(prevstate, {\r\n          dataincart: updatedaddingtocart,\r\n        });\r\n        console.log(newobj);\r\n        return newobj;\r\n      }\r\n      return prevstate;\r\n\r\n    case \"REMOVE_FROM_CART\":\r\n      console.log({ payload: action.payload });\r\n      // const removefromcartobj = extend(prevstate, {\r\n      //   dataincart: action.payload,\r\n      // });\r\n      // console.log({ removefromcartobj });\r\n      return { ...prevstate };\r\n    case \"SET_DATA_TO_ARRAY\":\r\n      // const newobj = extend(prevstate, { dataincart: [...action.payload] });\r\n      return { dataincart: [...action.payload] };\r\n    default:\r\n      break;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}